<#
.SYNOPSIS
This script collects information about the number of DNS queries per hour and the number of unique clients querying each DNS server.

.DESCRIPTION
It reads the DNS debug log files generated by the DNS servers and parses the logs to extract the required information.
The results are compiled into a table and displayed in the console.

.REQUIREMENTS
- DNS debug logging must be enabled on the DNS servers, and the log file paths must be correctly specified.
- The log file format must be consistent with the script's parsing logic.
- Administrative privileges to read the log files on the DNS servers.

.USAGE
1. Define the list of DNS servers and their corresponding debug log file paths in the `$dnsServers` array.
2. Define the desired time range for the query in the `$startTime` and `$endTime` variables.
3. Run the script to collect and display the DNS query data and unique client counts.

#>

# Define the list of DNS servers and their debug log file paths
$dnsServers = @(
    @{ServerName="DNSServer1"; LogFilePath="C:\DNS\DnsDebugLog1.log"},
    @{ServerName="DNSServer2"; LogFilePath="C:\DNS\DnsDebugLog2.log"},
    @{ServerName="DNSServer3"; LogFilePath="C:\DNS\DnsDebugLog3.log"}
)

# Define the time range for the query (last hour)
$endTime = Get-Date
$startTime = $endTime.AddHours(-1)

# Initialize an array to hold the results
$results = @()

# Loop through each DNS server and collect the DNS query information
foreach ($server in $dnsServers) {
    Write-Host "Collecting data from $($server.ServerName)..."
    try {
        # Read the debug log file
        $logLines = Get-Content -Path $server.LogFilePath

        # Filter log lines within the time range
        $filteredLines = $logLines | Where-Object {
            $logTime = [datetime]::ParseExact($_.Substring(0, 19), "yyyy-MM-dd HH:mm:ss", $null)
            $logTime -ge $startTime -and $logTime -le $endTime
        }

        # Group the log lines by the hour and count unique clients
        $groupedLines = $filteredLines | Group-Object {
            $_.Substring(0, 13) # Group by yyyy-MM-dd HH
        }

        foreach ($group in $groupedLines) {
            $hour = [datetime]::ParseExact($group.Name, "yyyy-MM-dd HH", $null)

            # Extract unique client IP addresses
            $uniqueClients = $group.Group | ForEach-Object {
                if ($_ -match '(\d{1,3}\.){3}\d{1,3}') {
                    $matches[0]
                }
            } | Sort-Object -Unique

            $clientCount = $uniqueClients.Count

            # Add the result to the array
            $results += [pscustomobject]@{
                Server      = $server.ServerName
                Hour        = $hour
                ClientCount = $clientCount
            }
        }
    }
    catch {
        Write-Host "Failed to collect data from $($server.ServerName): $_"
    }
}

# Output the results in a table format
$results | Sort-Object Server, Hour | Format-Table -AutoSize